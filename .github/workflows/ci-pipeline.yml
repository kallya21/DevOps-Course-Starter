name: Continuous Integration
on:
  schedule:
    - cron: '35 0 * * *'
  push:
    paths-ignore:
        - 'README.md'
  pull_request:
    paths-ignore:
        - 'README.md'

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: docker build --target test --tag my-test-image .
    - run: docker run --env-file .env.test  my-test-image
    - run: docker run --entrypoint poetry my-test-image run safety check
      continue-on-error: true

  deploy:
    name: Build and deploy
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/exercise-13'
    steps:
    - uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - run: docker build --target production --tag kallya21/todo-app:latest .
    - run: docker push kallya21/todo-app:latest

    - name: Set up and deploy Terraform
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        TF_VAR_prefix: ${{ secrets.PREFIX }}
        TF_VAR_docker_registry_server_url: ${{ secrets.DOCKER_REGISTRY_SERVER_URL }}
        TF_VAR_secret_key: ${{ secrets.SECRET_KEY }}
        TF_VAR_mongo_db_name: ${{ secrets.MONGO_DB_NAME }}
        TF_VAR_flask_app: ${{ secrets.FLASK_APP }}
        TF_VAR_websites_port: ${{ secrets.WEBSITES_PORT }}
        TF_VAR_log_level: ${{ secrets.LOG_LEVEL }}
        TF_VAR_loggly_token: ${{ secrets.LOGGLY_TOKEN }}
      run: |
        cd terraform
        terraform init
        terraform apply -auto-approve
        curl -dH -X POST "$(terraform output -raw cd_webhook)"
   
  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/python-3.8@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}